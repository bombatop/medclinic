<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!-- Load application properties -->
    <context:property-placeholder location="classpath:application.properties" />
    
    <!-- Component scanning for beans in the 'courseproject' package -->
    <context:component-scan base-package="courseproject" />
    
    <!-- Enable Spring Data JPA repositories in the 'courseproject.repository' package -->
    <jpa:repositories base-package="courseproject.repository" />
    
    <!-- Enable declarative transaction management with @Transactional -->
    <tx:annotation-driven />
    
    <!-- Configure the JPA EntityManagerFactory for database interaction -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="courseproject.model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
            </bean>
        </property>
    </bean>

    <!-- Configure the database connection details -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/clinic" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>

    <!-- Configure the JPA transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>


    <!-- Enable Spring MVC with argument resolvers and resources -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
                <property name="maxPageSize" value="5" />
            </bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- Define resource locations for serving static resources -->
    <mvc:resources location="/resources/" mapping="/resources/**" />

    <!-- Configure a CommonsMultipartResolver for handling file uploads -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="41943040" /> <!-- Set the maximum file size in bytes (e.g., 10MB) -->
    </bean>

    <mvc:cors>
        <mvc:mapping path="/api/**"
            allowed-origins="*"
            allowed-headers="Content-Type, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Authorization, X-Requested-With, requestId, Correlation-Id"
            allowed-methods="GET, PUT, POST, DELETE"/>
    </mvc:cors>

    
    <!-- Enable logger settings at log4j.properties -->

    <!-- <bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean> -->
</beans>
